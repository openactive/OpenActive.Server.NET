name: OpenActive Reference Implementation (.NET Framework)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  openactive-test-suite:
    runs-on: windows-latest

    steps:
    - name: Checkout OpenActive.Server.NET
      uses: actions/checkout@v2
      with:
        path: server
    - name: Use matching coverage/* branch ${{ github.head_ref }} in OpenActive Test Suite 
      if: ${{ startsWith(github.head_ref, 'coverage/') }}
      run: echo "::set-env name=mirror_ref::${{ github.head_ref }}"
    - name: Checkout OpenActive Test Suite ${{ env.mirror_ref }}
      uses: actions/checkout@v2
      with:
        repository: openactive/openactive-test-suite
        ref: ${{ env.mirror_ref }}
        path: tests

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        
    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.1
      with:
        vs-version: "[16.4,16.9)"
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    
    - name: Install OpenActive.Server.NET dependencies
      run: nuget restore .\server\

    - name: Build .NET Framework Reference Implementation
      run: msbuild .\server\Examples\BookingSystem.AspNetFramework\BookingSystem.AspNetFramework.csproj /p:Configuration=Release

    - name: Deploy .NET Framework Reference Implementation to folder
      run: msbuild .\server\Examples\BookingSystem.AspNetFramework\BookingSystem.AspNetFramework.csproj /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ runner.temp }}\deploy\ /p:PackageAsSingleFile=false

    - name: Start .NET Framework Reference Implementation from folder (using IIS Express)
      run: |
        Start-Process -FilePath "$Env:Programfiles\IIS Express\iisexpress.exe" -ArgumentList "/path:${{ runner.temp }}\deploy\ /port:5000"

    - name: Install OpenActive Test Suite
      run: npm install
      working-directory: tests

    - name: Run OpenActive Integration Tests in Random Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          { "outputPath": "../../output/random/", "datasetSiteUrl": "http://localhost:5000/openactive", "sellers": { "primary": { "@type": "Organization", "@id": "http://localhost:5000/api/identifiers/sellers/1", "requestHeaders": { "X-OpenActive-Test-Client-Id": "test", "X-OpenActive-Test-Seller-Id": "http://localhost:5000/api/identifiers/sellers/1" } }, "secondary": { "@type": "Organization", "@id": "http://localhost:5000/api/identifiers/sellers/3" } }, "useRandomOpportunities": true, "implementedFeatures": { "multiple-sellers": true }, "generateConformanceCertificate": true, "conformanceCertificateId": "https://openactive.io/OpenActive.Server.NET/certification/" }
        NODE_ENV: 
      working-directory: tests
    - name: Upload test output for Random Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test-output-framework-random
        path: ./tests/output/random/

    - name: Run OpenActive Integration Tests in Controlled Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          { "outputPath": "../../output/controlled/", "datasetSiteUrl": "http://localhost:5000/openactive", "sellers": { "primary": { "@type": "Organization", "@id": "http://localhost:5000/api/identifiers/sellers/1", "requestHeaders": { "X-OpenActive-Test-Client-Id": "test", "X-OpenActive-Test-Seller-Id": "http://localhost:5000/api/identifiers/sellers/1" } }, "secondary": { "@type": "Organization", "@id": "http://localhost:5000/api/identifiers/sellers/3" } }, "useRandomOpportunities": false, "implementedFeatures": { "multiple-sellers": true }, "generateConformanceCertificate": true, "conformanceCertificateId": "https://openactive.io/OpenActive.Server.NET/certification/" }
        NODE_ENV: 
      working-directory: tests
    - name: Upload test output for Controlled Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test-output-framework-controlled
        path: ./tests/output/controlled/
