name: OpenActive Reference Implementation (.NET Core)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  openactive-test-suite:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        profile: ['all-features', 'single-seller', 'no-payment-reconciliation']

    steps:
    - name: Checkout OpenActive.Server.NET
      uses: actions/checkout@v2
      with:
        path: server
    - name: Use matching coverage/* branch ${{ github.head_ref }} in OpenActive Test Suite 
      if: ${{ startsWith(github.head_ref, 'coverage/') }}
      id: refs
      run: echo "::set-output name=mirror_ref::${{ github.head_ref }}"
    - name: Checkout OpenActive Test Suite ${{ steps.refs.outputs.mirror_ref }}
      uses: actions/checkout@v2
      with:
        repository: openactive/openactive-test-suite
        ref: ${{ steps.refs.outputs.mirror_ref }}
        path: tests

    - name: Setup .NET Core 2.1.808
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.808
    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Install OpenActive.Server.NET dependencies
      run: dotnet restore ./server/
    - name: Build .NET Core Reference Implementation
      run: dotnet build ./server/Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-restore
    - name: Start .NET Core Reference Implementation
      run: |
        dotnet run --project ./server/Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-build &
      env:
        ASPNETCORE_ENVIRONMENT: ${{ matrix.profile }}
        
    - name: Install OpenActive Test Suite
      run: npm install
      working-directory: tests

    - name: Run OpenActive Integration Tests in Random Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          { "outputPath": "../../output/random/", "useRandomOpportunities": true, "conformanceCertificateId": "https://openactive.io/OpenActive.Server.NET/certification/" }
        NODE_ENV: .example.${{ matrix.profile }}
        NODE_APP_INSTANCE: ci
      working-directory: tests
    - name: Upload test output for Random Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test.random.${{ matrix.profile }}
        path: ./tests/output/random/

    - name: Run OpenActive Integration Tests in Controlled Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          { "outputPath": "../../output/controlled/", "useRandomOpportunities": false, "conformanceCertificateId": "https://openactive.io/OpenActive.Server.NET/certification/" }
        NODE_ENV: .example.${{ matrix.profile }}
        NODE_APP_INSTANCE: ci

      working-directory: tests
    - name: Upload test output for Controlled Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test.controlled.${{ matrix.profile }}
        path: ./tests/output/controlled/

    - name: Copy certificate for deployment to GitHub Pages (master branch for 'all-features' profile only)
      run: |
        mkdir -p ./publish/certification/
        cp ./tests/output/controlled/certification/* ./publish/certification/
      if: ${{ github.ref == 'refs/heads/master' && matrix.profile == 'all-features' }}
    - name: Deploy certificate to GitHub Pages (master branch for multiple-sellers only)
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/master' && matrix.profile == 'all-features' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./publish
        force_orphan: true
        enable_jekyll: true

  deploy-reference-implementation:
    # Master branch only
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: openactive-test-suite
    runs-on: ubuntu-latest
    steps:

      # Checkout the repo
      - uses: actions/checkout@master
      
      # Setup .NET Core SDK
      - name: Setup .NET Core 2.1.808
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.808
      
      # Run dotnet build and publish
      - name: Install OpenActive.Server.NET dependencies
        run: dotnet restore
      - name: Build OpenActive.Server.NET Reference Implementation
        run: dotnet build ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-restore
      - name: Publish OpenActive.Server.NET Reference Implementation
        run: dotnet publish ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-build --output './web-app-package' 
          
      # Deploy to Azure Web apps
      - name: 'Deploy Azure webapp using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: openactive-reference-implementation # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: './Examples/BookingSystem.AspNetCore/web-app-package'
