name: Ref Impl

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  core:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        mode: ['random', 'controlled']
        profile: ['all-features', 'single-seller', 'no-payment-reconciliation', 'no-auth']
        
    steps:
    - name: Checkout OpenActive.Server.NET
      uses: actions/checkout@v2
      with:
        path: server
    - name: Use matching coverage/* branch ${{ github.head_ref }} in OpenActive Test Suite 
      if: ${{ startsWith(github.head_ref, 'coverage/') }}
      id: refs
      run: echo "::set-output name=mirror_ref::${{ github.head_ref }}"
    - name: Checkout OpenActive Test Suite ${{ steps.refs.outputs.mirror_ref }}
      uses: actions/checkout@v2
      with:
        repository: openactive/openactive-test-suite
        ref: ${{ steps.refs.outputs.mirror_ref }}
        path: tests

    - name: Setup .NET Core 2.1.808 for Booking Server Reference Implementation
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.808
    - name: Setup .NET Core 3.0.103 for Authentication Authority Reference Implementation
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103

    - name: Setup Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install OpenActive.Server.NET dependencies
      if: ${{ matrix.profile != 'no-auth' && matrix.profile != 'single-seller' }}
      run: dotnet restore ./server/

    - name: Build .NET Core Authentication Authority Reference Implementation
      if: ${{ matrix.profile != 'no-auth' && matrix.profile != 'single-seller' }}
      run: dotnet build ./server/Examples/BookingSystem.AspNetCore.IdentityServer/BookingSystem.AspNetCore.IdentityServer.csproj --configuration Release --no-restore
    - name: Start .NET Core Authentication Authority Reference Implementation
      if: ${{ matrix.profile != 'no-auth' && matrix.profile != 'single-seller' }}
      run: |
        dotnet run --no-launch-profile --project ./server/Examples/BookingSystem.AspNetCore.IdentityServer/BookingSystem.AspNetCore.IdentityServer.csproj --configuration Release --no-build &

    - name: Build .NET Core Booking Server Reference Implementation
      run: dotnet build ./server/Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release ${{ matrix.profile != 'no-auth' && matrix.profile != 'single-seller' && '--no-restore' || '' }}
    - name: Start .NET Core Booking Server Reference Implementation
      run: |
        dotnet run --no-launch-profile --project ./server/Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-build &
      env:
        ASPNETCORE_ENVIRONMENT: ${{ matrix.profile }}
        
    - name: Install OpenActive Test Suite
      run: npm install
      working-directory: tests

    - name: Run OpenActive Integration Tests in ${{ matrix.mode }} mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          {"broker": {"outputPath": "../../output/"}, "integrationTests": { "outputPath": "../../output/", "conformanceCertificatePath": "../../conformance/examples/${{ matrix.profile }}/${{ matrix.mode }}/", "useRandomOpportunities": ${{ matrix.mode == 'random' }}, "conformanceCertificateId": "https://certificates.reference-implementation.openactive.io/examples/${{ matrix.profile }}/${{ matrix.mode }}/" }}
        NODE_ENV: .example.${{ matrix.profile }}
        NODE_APP_INSTANCE: ci
      working-directory: tests

    - name: Upload test output for ${{ matrix.mode }} mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: core.${{ matrix.mode }}.${{ matrix.profile }}
        path: ./tests/output/

    - name: Deploy conformance certificate to Azure Blob Storage (master branch for 'all-features' profile in controlled mode only)
      uses: bacongobbler/azure-blob-storage-upload@v1.2.0
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        source_dir: ./tests/conformance/
        container_name: '$web'
        connection_string: ${{ secrets.CONFORMANCE_CERTIFICATE_BLOB_STORAGE_CONNECTION_STRING }}
        sync: false


  framework:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        mode: ['random', 'controlled']
        profile: ['no-auth']

    steps:
    - name: Checkout OpenActive.Server.NET
      uses: actions/checkout@v2
      with:
        path: server
    - name: Use matching coverage/* branch ${{ github.head_ref }} in OpenActive Test Suite 
      if: ${{ startsWith(github.head_ref, 'coverage/') }}
      id: refs
      run: echo "::set-output name=mirror_ref::${{ github.head_ref }}"
    - name: Checkout OpenActive Test Suite ${{ steps.refs.outputs.mirror_ref }}
      uses: actions/checkout@v2
      with:
        repository: openactive/openactive-test-suite
        ref: ${{ steps.refs.outputs.mirror_ref }}
        path: tests

    - name: Setup Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
        
    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Install OpenActive.Server.NET dependencies
      run: nuget restore .\server\

    - name: Build .NET Framework Reference Implementation
      run: msbuild .\server\Examples\BookingSystem.AspNetFramework\BookingSystem.AspNetFramework.csproj /p:Configuration=Release

    - name: Deploy .NET Framework Reference Implementation to folder
      run: msbuild .\server\Examples\BookingSystem.AspNetFramework\BookingSystem.AspNetFramework.csproj /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ runner.temp }}\deploy\ /p:PackageAsSingleFile=false

    - name: Start .NET Framework Reference Implementation from folder (using IIS Express)
      run: |
        Start-Process -FilePath "$Env:Programfiles\IIS Express\iisexpress.exe" -ArgumentList "/path:${{ runner.temp }}\deploy\ /port:5000"

    - name: Install OpenActive Test Suite
      run: npm install
      working-directory: tests

    - name: Run OpenActive Integration Tests in ${{ matrix.mode }} mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          {"broker": {"outputPath": "../../output/"}, "integrationTests": {"outputPath": "../../output/", "useRandomOpportunities": ${{ matrix.mode == 'random' }}, "conformanceCertificateId": "https://openactive.io/OpenActive.Server.NET/certification/"}}
        NODE_ENV: .example.${{ matrix.profile }}
        NODE_APP_INSTANCE: framework
      working-directory: tests
      
    - name: Upload test output for ${{ matrix.mode }} mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: framework.${{ matrix.mode }}.${{ matrix.profile }}
        path: ./tests/output/

  deploy-reference-implementation:
    # Master branch only
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - core
      - framework
    runs-on: ubuntu-latest
    steps:

      # Checkout the repo
      - uses: actions/checkout@master
      
      # Setup .NET Core SDK
      - name: Setup .NET Core 2.1.808
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.808
      - name: Setup .NET Core 3.0.103 for Authentication Authority Reference Implementation
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.103
      
      # Run dotnet build and publish
      - name: Install OpenActive.Server.NET dependencies
        run: dotnet restore

      - name: Build OpenActive.Server.NET Booking Server Reference Implementation
        run: dotnet build ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-restore
      - name: Publish OpenActive.Server.NET Booking Server Reference Implementation
        run: dotnet publish ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-build --output './web-app-package/BookingSystem.AspNetCore' 

      - name: Build OpenActive.Server.NET Authentication Authority Reference Implementation
        run: dotnet build ./Examples/BookingSystem.AspNetCore.IdentityServer/BookingSystem.AspNetCore.IdentityServer.csproj --configuration Release --no-restore
      - name: Publish OpenActive.Server.NET Authentication Authority Reference Implementation
        run: dotnet publish ./Examples/BookingSystem.AspNetCore.IdentityServer/BookingSystem.AspNetCore.IdentityServer.csproj --configuration Release --no-build --output './web-app-package/BookingSystem.AspNetCore.IdentityServer' 

      # Deploy to Azure Web apps
      - name: 'Deploy Booking Server Reference Implementation using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: openactive-reference-implementation
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: './web-app-package/BookingSystem.AspNetCore'

      - name: 'Deploy Authentication Authority Reference Implementation using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: openactive-reference-implementation-auth
          publish-profile: ${{ secrets.AZURE_WEBAPP_AUTH_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: './web-app-package/BookingSystem.AspNetCore.IdentityServer'
